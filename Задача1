#include <iostream>
#include <string>
#include <fstream>
#include <vector>
using namespace std;
struct blati {
	int chislo;
	string stroka;
};
class shifr {
private:
	int Fib[100];
	vector<blati>Ocheredi;
	vector<int>Dekey;
	vector<int>Key;
public:
	void Fibonachi(int n) {
		for (int i = 1; i < n; i++) {
			if ((i == 2) || (i == 1)) {
				Fib[i] = 1;
			}
			else {
				Fib[i] = Fib[i - 1] + Fib[i - 2];
			}
		}
	}
	void read() {
		Fibonachi(20);
		ifstream fin("in.txt");
		ofstream fout("out.txt");
		int i = 2;
		string slovo;
		while (fin >> slovo) {
			blati s;
			s.stroka = slovo;
			s.chislo = Fib[i];
			Ocheredi.push_back(s);
			i++;
		}
	}
	void encode(){
		read();
		int n = 0;
		string encodeStroka[100];
		int in = 0;
		cout << "Введите какой размер ключа вы хотите" << endl;
		cin >> in;
		cout << "Введите ключ через пробел" << endl;
		for (int i = 0; i <in; i++) {
			cin >> n;
			Key.push_back(n);
		}
		int k = 0;
		for (int i = 0; i < Ocheredi.size(); i++) {
			for (int j = 0; j < Key.size(); j++) {
				if (Key[j] == Ocheredi[i].chislo) {
					k++;
				}
			}
		}
		if (Key.size() != Ocheredi.size()) {
			cout << "ERROR" << endl;
		}
	   else if (k != Key.size()) {
			cout << "ERROR" << endl;
		}
	   else { 
		   for (int j = 0; j < Ocheredi.size(); j++) {
			   for (int i = 0; i  < Ocheredi.size(); i++) {
				   if ( Ocheredi[i].chislo == Key[j]) {
					   encodeStroka[j] = Ocheredi[i].stroka;
				   }
			   }
		   }
		   for (int i = 0; i < Ocheredi.size(); i++) {
			  cout << encodeStroka[i] << " ";
		   }
	   }
	}
	void decode() {
		encode();
		string decodeStroka[100];

		for (int i = 0; i < Ocheredi.size(); i++) {
			for (int j = 0; j < Ocheredi.size(); j++) {
				if (Key[i] < Key[j]) {
					swap(Key[j], Key[i]);
					Key[j] = Key[j];
				}
			}
		}
		for (int j = 0; j < Ocheredi.size(); j++) {
			for (int i = 0; i < Ocheredi.size(); i++) {
				if (Ocheredi[i].chislo == Key[j]) {
					decodeStroka[j] = Ocheredi[i].stroka;
				}
			}
		}
		cout << endl;
		for (int i = 0; i < Ocheredi.size(); i++) {
			cout << decodeStroka[i] << " ";
		}
		cout << endl;
	}
};
int main() {
	shifr shifr;
	shifr.decode();
	system("pause");
}
